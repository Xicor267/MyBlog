{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sublime text 3\\\\Sublime Text 3\\\\Package of Sublime text\\\\Web\\\\XICOR-main\\\\Mern_Blog_Update1\\\\client\\\\src\\\\components\\\\PostDetails\\\\CommentSection.jsx\";\nimport React, { useState, useRef } from 'react';\nimport { Typography, TextField, Button } from '@material-ui/core/';\nimport { useDispatch } from 'react-redux';\nimport { commentPost } from '../../actions/posts';\nimport useStyles from './styles';\nimport moment from 'moment';\n\nconst CommentSection = ({\n  post\n}) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [comment, setComment] = useState('');\n  const dispatch = useDispatch();\n  const [comments, setComments] = useState(post === null || post === void 0 ? void 0 : post.comments);\n  const classes = useStyles();\n  const commentsRef = useRef();\n\n  const handleComment = async () => {\n    var _user$result;\n\n    const newComments = await dispatch(commentPost(`${user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name} [ ${moment(post.createdAt).fromNow()} ] => ${comment} `, post._id));\n    setComment('');\n    setComments(newComments);\n    commentsRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsOuterContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '45%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Add a comment\"), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    rows: 4,\n    variant: \"outlined\",\n    label: \"Write Something...\",\n    multiline: true,\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: '10px'\n    },\n    fullWidth: true,\n    disabled: !comment.length,\n    color: \"secondary\",\n    variant: \"contained\",\n    onClick: handleComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Comment\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsInnerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Comment Lists\"), comments === null || comments === void 0 ? void 0 : comments.map((c, i) => /*#__PURE__*/React.createElement(Typography, {\n    key: i,\n    gutterBottom: true,\n    variant: \"overline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, c.split(':')[0]))), /*#__PURE__*/React.createElement(\"div\", {\n    ref: commentsRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default CommentSection;","map":{"version":3,"sources":["E:/Sublime text 3/Sublime Text 3/Package of Sublime text/Web/XICOR-main/Mern_Blog_Update1/client/src/components/PostDetails/CommentSection.jsx"],"names":["React","useState","useRef","Typography","TextField","Button","useDispatch","commentPost","useStyles","moment","CommentSection","post","user","JSON","parse","localStorage","getItem","comment","setComment","dispatch","comments","setComments","classes","commentsRef","handleComment","newComments","result","name","createdAt","fromNow","_id","current","scrollIntoView","behavior","commentsOuterContainer","width","e","target","value","marginTop","length","commentsInnerContainer","map","c","i","split"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Typography, TextField, Button } from '@material-ui/core/';\nimport { useDispatch } from 'react-redux';\n\nimport { commentPost } from '../../actions/posts';\nimport useStyles from './styles';\nimport moment from 'moment';\n\nconst CommentSection = ({ post }) => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const [comment, setComment] = useState('');\n  const dispatch = useDispatch();\n  const [comments, setComments] = useState(post?.comments);\n  const classes = useStyles();\n  const commentsRef = useRef();\n\n  const handleComment = async () => {\n    const newComments = await dispatch(commentPost(`${user?.result?.name} [ ${moment(post.createdAt).fromNow()} ] => ${comment} `, post._id,));\n\n    setComment('');\n    setComments(newComments);\n\n    commentsRef.current.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  return (\n    <div>\n      <div className={classes.commentsOuterContainer}>\n        <div style={{ width: '45%' }}>\n          <Typography gutterBottom variant=\"h6\" color=\"primary\">Add a comment</Typography>\n          <TextField fullWidth rows={4} variant=\"outlined\" label=\"Write Something...\" multiline value={comment} onChange={(e) => setComment(e.target.value)} />\n          <br />\n          <Button style={{ marginTop: '10px' }} fullWidth disabled={!comment.length} color=\"secondary\" variant=\"contained\" onClick={handleComment}>\n            Comment\n          </Button>\n        </div>\n        <div className={classes.commentsInnerContainer}>\n          <Typography gutterBottom variant=\"h6\" color=\"primary\">Comment Lists</Typography>\n          {comments?.map((c, i) => (\n            <Typography key={i} gutterBottom variant=\"overline\">\n              <strong>{c.split(':')[0]}</strong>\n            </Typography>\n          ))}\n          <div ref={commentsRef} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CommentSection;\n"]},"metadata":{},"sourceType":"module"}